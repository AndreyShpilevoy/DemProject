@mixin float($breakpoint, $way, $floatParamList) {
	@each $param in $floatParamList {
		.float-#{$param}-#{$breakpoint}#{$way} {
			float: $param;
		}
	}
}

@mixin padding($breakpoint, $way, $paddingValueParamList, $paddingNamesParamList) {
	@each $value in $paddingValueParamList {
		@each $name in $paddingNamesParamList {
			.padding-#{$name}-#{$value}-#{$breakpoint}#{$way} {
				padding-#{$name}: $value;
			}
		}

		.padding-#{$value}-#{$breakpoint}#{$way} {
			padding: $value;
		}
	}
}

@mixin common-bundle($breakpoint, $way) {
	.full-width-container-#{$breakpoint}#{$way} {
		width: 100%;
	}

	@include padding($breakpoint, $way, (inherit, initial), (bottom, left, right, top));

	.vertical-center-container-#{$breakpoint}#{$way} {
		min-height: 100%;
		display: flex;
		align-items: center;
	}

	.in-one-row-container-#{$breakpoint}#{$way} {
		display: flex;
		flex-flow: row wrap;
	}

	@include float($breakpoint, $way, (inherit, initial, left, right, none));
}

@each $breakpoint, $size in $grid-breakpoints-min {
	@media (min-width: $size) {
		@include common-bundle($breakpoint, "-up");
	}
}

@each $breakpoint, $size in $grid-breakpoints-max {
	@if $breakpoint != 'xl' {
		@media (max-width: $size) {
			@include common-bundle($breakpoint, "-down");
		}
	}
	@else {
		@include common-bundle($breakpoint, "-down");
	}
}

@each $breakpoint, $size-min, $size-max in $grid-breakpoints-min-max {
	@media (min-width: $size-min) and (min-width: $size-max) {
		@include common-bundle($breakpoint, "");
	}
}
